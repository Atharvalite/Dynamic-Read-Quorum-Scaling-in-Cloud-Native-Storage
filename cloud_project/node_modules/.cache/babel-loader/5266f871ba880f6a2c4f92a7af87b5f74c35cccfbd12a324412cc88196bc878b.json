{"ast":null,"code":"// src/toast.utils.ts\nvar findById = (arr, id) => arr.find(toast => toast.id === id);\nfunction findToast(toasts, id) {\n  const position = getToastPosition(toasts, id);\n  const index = position ? toasts[position].findIndex(toast => toast.id === id) : -1;\n  return {\n    position,\n    index\n  };\n}\nfunction getToastPosition(toasts, id) {\n  for (const [position, values] of Object.entries(toasts)) {\n    if (findById(values, id)) {\n      return position;\n    }\n  }\n}\nvar isVisible = (toasts, id) => !!getToastPosition(toasts, id);\nfunction getToastStyle(position) {\n  const isRighty = position.includes(\"right\");\n  const isLefty = position.includes(\"left\");\n  let alignItems = \"center\";\n  if (isRighty) alignItems = \"flex-end\";\n  if (isLefty) alignItems = \"flex-start\";\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems\n  };\n}\nfunction getToastListStyle(position) {\n  const isTopOrBottom = position === \"top\" || position === \"bottom\";\n  const margin = isTopOrBottom ? \"0 auto\" : void 0;\n  const top = position.includes(\"top\") ? \"env(safe-area-inset-top, 0px)\" : void 0;\n  const bottom = position.includes(\"bottom\") ? \"env(safe-area-inset-bottom, 0px)\" : void 0;\n  const right = !position.includes(\"left\") ? \"env(safe-area-inset-right, 0px)\" : void 0;\n  const left = !position.includes(\"right\") ? \"env(safe-area-inset-left, 0px)\" : void 0;\n  return {\n    position: \"fixed\",\n    zIndex: \"var(--toast-z-index, 5500)\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin,\n    top,\n    bottom,\n    right,\n    left\n  };\n}\nexport { findById, findToast, getToastPosition, isVisible, getToastStyle, getToastListStyle };","map":{"version":3,"names":["findById","arr","id","find","toast","findToast","toasts","position","getToastPosition","index","findIndex","values","Object","entries","isVisible","getToastStyle","isRighty","includes","isLefty","alignItems","display","flexDirection","getToastListStyle","isTopOrBottom","margin","top","bottom","right","left","zIndex","pointerEvents"],"sources":["/Users/harshkulkarni/Desktop/cloud_project/node_modules/@chakra-ui/toast/dist/chunk-LQP773TK.mjs"],"sourcesContent":["// src/toast.utils.ts\nvar findById = (arr, id) => arr.find((toast) => toast.id === id);\nfunction findToast(toasts, id) {\n  const position = getToastPosition(toasts, id);\n  const index = position ? toasts[position].findIndex((toast) => toast.id === id) : -1;\n  return {\n    position,\n    index\n  };\n}\nfunction getToastPosition(toasts, id) {\n  for (const [position, values] of Object.entries(toasts)) {\n    if (findById(values, id)) {\n      return position;\n    }\n  }\n}\nvar isVisible = (toasts, id) => !!getToastPosition(toasts, id);\nfunction getToastStyle(position) {\n  const isRighty = position.includes(\"right\");\n  const isLefty = position.includes(\"left\");\n  let alignItems = \"center\";\n  if (isRighty)\n    alignItems = \"flex-end\";\n  if (isLefty)\n    alignItems = \"flex-start\";\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems\n  };\n}\nfunction getToastListStyle(position) {\n  const isTopOrBottom = position === \"top\" || position === \"bottom\";\n  const margin = isTopOrBottom ? \"0 auto\" : void 0;\n  const top = position.includes(\"top\") ? \"env(safe-area-inset-top, 0px)\" : void 0;\n  const bottom = position.includes(\"bottom\") ? \"env(safe-area-inset-bottom, 0px)\" : void 0;\n  const right = !position.includes(\"left\") ? \"env(safe-area-inset-right, 0px)\" : void 0;\n  const left = !position.includes(\"right\") ? \"env(safe-area-inset-left, 0px)\" : void 0;\n  return {\n    position: \"fixed\",\n    zIndex: \"var(--toast-z-index, 5500)\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin,\n    top,\n    bottom,\n    right,\n    left\n  };\n}\n\nexport {\n  findById,\n  findToast,\n  getToastPosition,\n  isVisible,\n  getToastStyle,\n  getToastListStyle\n};\n"],"mappings":"AAAA;AACA,IAAIA,QAAQ,GAAGA,CAACC,GAAG,EAAEC,EAAE,KAAKD,GAAG,CAACE,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACF,EAAE,KAAKA,EAAE,CAAC;AAChE,SAASG,SAASA,CAACC,MAAM,EAAEJ,EAAE,EAAE;EAC7B,MAAMK,QAAQ,GAAGC,gBAAgB,CAACF,MAAM,EAAEJ,EAAE,CAAC;EAC7C,MAAMO,KAAK,GAAGF,QAAQ,GAAGD,MAAM,CAACC,QAAQ,CAAC,CAACG,SAAS,CAAEN,KAAK,IAAKA,KAAK,CAACF,EAAE,KAAKA,EAAE,CAAC,GAAG,CAAC,CAAC;EACpF,OAAO;IACLK,QAAQ;IACRE;EACF,CAAC;AACH;AACA,SAASD,gBAAgBA,CAACF,MAAM,EAAEJ,EAAE,EAAE;EACpC,KAAK,MAAM,CAACK,QAAQ,EAAEI,MAAM,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACP,MAAM,CAAC,EAAE;IACvD,IAAIN,QAAQ,CAACW,MAAM,EAAET,EAAE,CAAC,EAAE;MACxB,OAAOK,QAAQ;IACjB;EACF;AACF;AACA,IAAIO,SAAS,GAAGA,CAACR,MAAM,EAAEJ,EAAE,KAAK,CAAC,CAACM,gBAAgB,CAACF,MAAM,EAAEJ,EAAE,CAAC;AAC9D,SAASa,aAAaA,CAACR,QAAQ,EAAE;EAC/B,MAAMS,QAAQ,GAAGT,QAAQ,CAACU,QAAQ,CAAC,OAAO,CAAC;EAC3C,MAAMC,OAAO,GAAGX,QAAQ,CAACU,QAAQ,CAAC,MAAM,CAAC;EACzC,IAAIE,UAAU,GAAG,QAAQ;EACzB,IAAIH,QAAQ,EACVG,UAAU,GAAG,UAAU;EACzB,IAAID,OAAO,EACTC,UAAU,GAAG,YAAY;EAC3B,OAAO;IACLC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBF;EACF,CAAC;AACH;AACA,SAASG,iBAAiBA,CAACf,QAAQ,EAAE;EACnC,MAAMgB,aAAa,GAAGhB,QAAQ,KAAK,KAAK,IAAIA,QAAQ,KAAK,QAAQ;EACjE,MAAMiB,MAAM,GAAGD,aAAa,GAAG,QAAQ,GAAG,KAAK,CAAC;EAChD,MAAME,GAAG,GAAGlB,QAAQ,CAACU,QAAQ,CAAC,KAAK,CAAC,GAAG,+BAA+B,GAAG,KAAK,CAAC;EAC/E,MAAMS,MAAM,GAAGnB,QAAQ,CAACU,QAAQ,CAAC,QAAQ,CAAC,GAAG,kCAAkC,GAAG,KAAK,CAAC;EACxF,MAAMU,KAAK,GAAG,CAACpB,QAAQ,CAACU,QAAQ,CAAC,MAAM,CAAC,GAAG,iCAAiC,GAAG,KAAK,CAAC;EACrF,MAAMW,IAAI,GAAG,CAACrB,QAAQ,CAACU,QAAQ,CAAC,OAAO,CAAC,GAAG,gCAAgC,GAAG,KAAK,CAAC;EACpF,OAAO;IACLV,QAAQ,EAAE,OAAO;IACjBsB,MAAM,EAAE,4BAA4B;IACpCC,aAAa,EAAE,MAAM;IACrBV,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBG,MAAM;IACNC,GAAG;IACHC,MAAM;IACNC,KAAK;IACLC;EACF,CAAC;AACH;AAEA,SACE5B,QAAQ,EACRK,SAAS,EACTG,gBAAgB,EAChBM,SAAS,EACTC,aAAa,EACbO,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}