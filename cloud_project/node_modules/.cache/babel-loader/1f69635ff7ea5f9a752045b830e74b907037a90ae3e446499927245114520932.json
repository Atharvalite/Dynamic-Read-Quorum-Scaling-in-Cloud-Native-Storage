{"ast":null,"code":"// src/color-mode-context.ts\nimport { createContext, useContext } from \"react\";\nvar ColorModeContext = createContext({});\nColorModeContext.displayName = \"ColorModeContext\";\nfunction useColorMode() {\n  const context = useContext(ColorModeContext);\n  if (context === void 0) {\n    throw new Error(\"useColorMode must be used within a ColorModeProvider\");\n  }\n  return context;\n}\nfunction useColorModeValue(light, dark) {\n  const {\n    colorMode\n  } = useColorMode();\n  return colorMode === \"dark\" ? dark : light;\n}\nexport { ColorModeContext, useColorMode, useColorModeValue };","map":{"version":3,"names":["createContext","useContext","ColorModeContext","displayName","useColorMode","context","Error","useColorModeValue","light","dark","colorMode"],"sources":["/Users/harshkulkarni/Desktop/cloud_project/node_modules/@chakra-ui/color-mode/dist/chunk-7NLW6UB6.mjs"],"sourcesContent":["// src/color-mode-context.ts\nimport { createContext, useContext } from \"react\";\nvar ColorModeContext = createContext({});\nColorModeContext.displayName = \"ColorModeContext\";\nfunction useColorMode() {\n  const context = useContext(ColorModeContext);\n  if (context === void 0) {\n    throw new Error(\"useColorMode must be used within a ColorModeProvider\");\n  }\n  return context;\n}\nfunction useColorModeValue(light, dark) {\n  const { colorMode } = useColorMode();\n  return colorMode === \"dark\" ? dark : light;\n}\n\nexport {\n  ColorModeContext,\n  useColorMode,\n  useColorModeValue\n};\n"],"mappings":"AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,IAAIC,gBAAgB,GAAGF,aAAa,CAAC,CAAC,CAAC,CAAC;AACxCE,gBAAgB,CAACC,WAAW,GAAG,kBAAkB;AACjD,SAASC,YAAYA,CAAA,EAAG;EACtB,MAAMC,OAAO,GAAGJ,UAAU,CAACC,gBAAgB,CAAC;EAC5C,IAAIG,OAAO,KAAK,KAAK,CAAC,EAAE;IACtB,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EACzE;EACA,OAAOD,OAAO;AAChB;AACA,SAASE,iBAAiBA,CAACC,KAAK,EAAEC,IAAI,EAAE;EACtC,MAAM;IAAEC;EAAU,CAAC,GAAGN,YAAY,EAAE;EACpC,OAAOM,SAAS,KAAK,MAAM,GAAGD,IAAI,GAAGD,KAAK;AAC5C;AAEA,SACEN,gBAAgB,EAChBE,YAAY,EACZG,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}