{"ast":null,"code":"import { Skeleton } from \"./chunk-3GRGLNAR.mjs\";\n\n// src/skeleton-text.tsx\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nvar defaultNoOfLines = 3;\nvar SkeletonText = props => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    variant,\n    size,\n    colorScheme,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = index => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = cx(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */jsx(chakra.div, {\n    className: _className,\n    ...rest,\n    children: numbers.map((number, index) => {\n      if (isLoaded && index > 0) {\n        return null;\n      }\n      const sizeProps = isLoaded ? null : {\n        mb: number === numbers.length ? \"0\" : spacing,\n        width: getWidth(number),\n        height: skeletonHeight\n      };\n      return /* @__PURE__ */jsx(Skeleton, {\n        startColor,\n        endColor,\n        isLoaded,\n        fadeDuration,\n        speed,\n        variant,\n        size,\n        colorScheme,\n        ...sizeProps,\n        children: index === 0 ? children : void 0\n      }, numbers.length.toString() + number);\n    })\n  });\n};\nSkeletonText.displayName = \"SkeletonText\";\nexport { SkeletonText };","map":{"version":3,"names":["Skeleton","useBreakpointValue","chakra","cx","jsx","range","count","Array","fill","map","_","index","defaultNoOfLines","SkeletonText","props","noOfLines","spacing","skeletonHeight","className","startColor","endColor","isLoaded","fadeDuration","speed","variant","size","colorScheme","children","rest","noOfLinesValue","numbers","getWidth","length","_className","div","number","sizeProps","mb","width","height","toString","displayName"],"sources":["/Users/harshkulkarni/Desktop/cloud_project/node_modules/@chakra-ui/skeleton/dist/chunk-QTKSMHLN.mjs"],"sourcesContent":["import {\n  Skeleton\n} from \"./chunk-3GRGLNAR.mjs\";\n\n// src/skeleton-text.tsx\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\nvar defaultNoOfLines = 3;\nvar SkeletonText = (props) => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    variant,\n    size,\n    colorScheme,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(\n    typeof noOfLines === \"number\" ? [noOfLines] : noOfLines\n  ) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n  const getWidth = (index) => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  const _className = cx(\"chakra-skeleton__group\", className);\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, children: numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */ jsx(\n      Skeleton,\n      {\n        startColor,\n        endColor,\n        isLoaded,\n        fadeDuration,\n        speed,\n        variant,\n        size,\n        colorScheme,\n        ...sizeProps,\n        children: index === 0 ? children : void 0\n      },\n      numbers.length.toString() + number\n    );\n  }) });\n};\nSkeletonText.displayName = \"SkeletonText\";\n\nexport {\n  SkeletonText\n};\n"],"mappings":"AAAA,SACEA,QAAQ,QACH,sBAAsB;;AAE7B;AACA,SAASC,kBAAkB,QAAQ,wBAAwB;AAC3D,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,EAAE,QAAQ,yBAAyB;AAC5C,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,KAAKA,CAACC,KAAK,EAAE;EACpB,OAAOC,KAAK,CAACD,KAAK,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC;AAC1D;AACA,IAAIC,gBAAgB,GAAG,CAAC;AACxB,IAAIC,YAAY,GAAIC,KAAK,IAAK;EAC5B,MAAM;IACJC,SAAS,GAAGH,gBAAgB;IAC5BI,OAAO,GAAG,QAAQ;IAClBC,cAAc,GAAG,QAAQ;IACzBC,SAAS;IACTC,UAAU;IACVC,QAAQ;IACRC,QAAQ;IACRC,YAAY;IACZC,KAAK;IACLC,OAAO;IACPC,IAAI;IACJC,WAAW;IACXC,QAAQ;IACR,GAAGC;EACL,CAAC,GAAGd,KAAK;EACT,MAAMe,cAAc,GAAG5B,kBAAkB,CACvC,OAAOc,SAAS,KAAK,QAAQ,GAAG,CAACA,SAAS,CAAC,GAAGA,SAAS,CACxD,IAAIH,gBAAgB;EACrB,MAAMkB,OAAO,GAAGzB,KAAK,CAACwB,cAAc,CAAC;EACrC,MAAME,QAAQ,GAAIpB,KAAK,IAAK;IAC1B,IAAIkB,cAAc,GAAG,CAAC,EAAE;MACtB,OAAOlB,KAAK,KAAKmB,OAAO,CAACE,MAAM,GAAG,KAAK,GAAG,MAAM;IAClD;IACA,OAAO,MAAM;EACf,CAAC;EACD,MAAMC,UAAU,GAAG9B,EAAE,CAAC,wBAAwB,EAAEe,SAAS,CAAC;EAC1D,OAAO,eAAgBd,GAAG,CAACF,MAAM,CAACgC,GAAG,EAAE;IAAEhB,SAAS,EAAEe,UAAU;IAAE,GAAGL,IAAI;IAAED,QAAQ,EAAEG,OAAO,CAACrB,GAAG,CAAC,CAAC0B,MAAM,EAAExB,KAAK,KAAK;MAChH,IAAIU,QAAQ,IAAIV,KAAK,GAAG,CAAC,EAAE;QACzB,OAAO,IAAI;MACb;MACA,MAAMyB,SAAS,GAAGf,QAAQ,GAAG,IAAI,GAAG;QAClCgB,EAAE,EAAEF,MAAM,KAAKL,OAAO,CAACE,MAAM,GAAG,GAAG,GAAGhB,OAAO;QAC7CsB,KAAK,EAAEP,QAAQ,CAACI,MAAM,CAAC;QACvBI,MAAM,EAAEtB;MACV,CAAC;MACD,OAAO,eAAgBb,GAAG,CACxBJ,QAAQ,EACR;QACEmB,UAAU;QACVC,QAAQ;QACRC,QAAQ;QACRC,YAAY;QACZC,KAAK;QACLC,OAAO;QACPC,IAAI;QACJC,WAAW;QACX,GAAGU,SAAS;QACZT,QAAQ,EAAEhB,KAAK,KAAK,CAAC,GAAGgB,QAAQ,GAAG,KAAK;MAC1C,CAAC,EACDG,OAAO,CAACE,MAAM,CAACQ,QAAQ,EAAE,GAAGL,MAAM,CACnC;IACH,CAAC;EAAE,CAAC,CAAC;AACP,CAAC;AACDtB,YAAY,CAAC4B,WAAW,GAAG,cAAc;AAEzC,SACE5B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}