{"ast":null,"code":"import { useAttributeObserver } from \"./chunk-XRH675A5.mjs\";\nimport { useSpinner } from \"./chunk-JCNYS6PS.mjs\";\n\n// src/use-number-input.ts\nimport { useCounter } from \"@chakra-ui/counter\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useMemo, useRef, useState } from \"react\";\nvar FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\nfunction isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\nfunction isValidNumericKeyboardEvent(event, isValid) {\n  if (event.key == null) return true;\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n  const isSingleCharacterKey = event.key.length === 1;\n  if (!isSingleCharacterKey || isModifierKey) return true;\n  return isValid(event.key);\n}\nfunction useNumberInput() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    focusInputOnChange = true,\n    clampValueOnBlur = true,\n    keepWithinRange = true,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    step: stepProp = 1,\n    isReadOnly,\n    isDisabled,\n    isRequired,\n    isInvalid,\n    pattern = \"[0-9]*(.[0-9]+)?\",\n    inputMode = \"decimal\",\n    allowMouseWheel,\n    id,\n    onChange: _,\n    precision,\n    name,\n    \"aria-describedby\": ariaDescBy,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onInvalid: onInvalidProp,\n    getAriaValueText: getAriaValueTextProp,\n    isValidCharacter: isValidCharacterProp,\n    format: formatValue,\n    parse: parseValue,\n    ...htmlProps\n  } = props;\n  const onFocus = useCallbackRef(onFocusProp);\n  const onBlur = useCallbackRef(onBlurProp);\n  const onInvalid = useCallbackRef(onInvalidProp);\n  const isValidCharacter = useCallbackRef(isValidCharacterProp != null ? isValidCharacterProp : isFloatingPointNumericCharacter);\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const counter = useCounter(props);\n  const {\n    update: updateFn,\n    increment: incrementFn,\n    decrement: decrementFn\n  } = counter;\n  const [isFocused, setFocused] = useState(false);\n  const isInteractive = !(isReadOnly || isDisabled);\n  const inputRef = useRef(null);\n  const inputSelectionRef = useRef(null);\n  const incrementButtonRef = useRef(null);\n  const decrementButtonRef = useRef(null);\n  const sanitize = useCallback(value => value.split(\"\").filter(isValidCharacter).join(\"\"), [isValidCharacter]);\n  const parse = useCallback(value => {\n    var _a;\n    return (_a = parseValue == null ? void 0 : parseValue(value)) != null ? _a : value;\n  }, [parseValue]);\n  const format = useCallback(value => {\n    var _a;\n    return ((_a = formatValue == null ? void 0 : formatValue(value)) != null ? _a : value).toString();\n  }, [formatValue]);\n  useUpdateEffect(() => {\n    if (counter.valueAsNumber > max) {\n      onInvalid == null ? void 0 : onInvalid(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    } else if (counter.valueAsNumber < min) {\n      onInvalid == null ? void 0 : onInvalid(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    }\n  }, [counter.valueAsNumber, counter.value, format, onInvalid]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return;\n    const notInSync = inputRef.current.value != counter.value;\n    if (notInSync) {\n      const parsedInput = parse(inputRef.current.value);\n      counter.setValue(sanitize(parsedInput));\n    }\n  }, [parse, sanitize]);\n  const increment = useCallback(function () {\n    let step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stepProp;\n    if (isInteractive) {\n      incrementFn(step);\n    }\n  }, [incrementFn, isInteractive, stepProp]);\n  const decrement = useCallback(function () {\n    let step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stepProp;\n    if (isInteractive) {\n      decrementFn(step);\n    }\n  }, [decrementFn, isInteractive, stepProp]);\n  const spinner = useSpinner(increment, decrement);\n  useAttributeObserver(incrementButtonRef, \"disabled\", spinner.stop, spinner.isSpinning);\n  useAttributeObserver(decrementButtonRef, \"disabled\", spinner.stop, spinner.isSpinning);\n  const onChange = useCallback(event => {\n    const evt = event.nativeEvent;\n    if (evt.isComposing) return;\n    const parsedInput = parse(event.currentTarget.value);\n    updateFn(sanitize(parsedInput));\n    inputSelectionRef.current = {\n      start: event.currentTarget.selectionStart,\n      end: event.currentTarget.selectionEnd\n    };\n  }, [updateFn, sanitize, parse]);\n  const _onFocus = useCallback(event => {\n    var _a, _b, _c;\n    onFocus == null ? void 0 : onFocus(event);\n    if (!inputSelectionRef.current) return;\n    event.target.selectionStart = (_b = inputSelectionRef.current.start) != null ? _b : (_a = event.currentTarget.value) == null ? void 0 : _a.length;\n    event.currentTarget.selectionEnd = (_c = inputSelectionRef.current.end) != null ? _c : event.currentTarget.selectionStart;\n  }, [onFocus]);\n  const onKeyDown = useCallback(event => {\n    if (event.nativeEvent.isComposing) return;\n    if (!isValidNumericKeyboardEvent(event, isValidCharacter)) {\n      event.preventDefault();\n    }\n    const stepFactor = getStepFactor(event) * stepProp;\n    const eventKey = event.key;\n    const keyMap = {\n      ArrowUp: () => increment(stepFactor),\n      ArrowDown: () => decrement(stepFactor),\n      Home: () => updateFn(min),\n      End: () => updateFn(max)\n    };\n    const action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [isValidCharacter, stepProp, increment, decrement, updateFn, min, max]);\n  const getStepFactor = event => {\n    let ratio = 1;\n    if (event.metaKey || event.ctrlKey) {\n      ratio = 0.1;\n    }\n    if (event.shiftKey) {\n      ratio = 10;\n    }\n    return ratio;\n  };\n  const ariaValueText = useMemo(() => {\n    const text = getAriaValueText == null ? void 0 : getAriaValueText(counter.value);\n    if (text != null) return text;\n    const defaultText = counter.value.toString();\n    return !defaultText ? void 0 : defaultText;\n  }, [counter.value, getAriaValueText]);\n  const validateAndClamp = useCallback(() => {\n    let next = counter.value;\n    if (counter.value === \"\") return;\n    const valueStartsWithE = /^[eE]/.test(counter.value.toString());\n    if (valueStartsWithE) {\n      counter.setValue(\"\");\n    } else {\n      if (counter.valueAsNumber < min) {\n        next = min;\n      }\n      if (counter.valueAsNumber > max) {\n        next = max;\n      }\n      counter.cast(next);\n    }\n  }, [counter, max, min]);\n  const onInputBlur = useCallback(() => {\n    setFocused(false);\n    if (clampValueOnBlur) {\n      validateAndClamp();\n    }\n  }, [clampValueOnBlur, setFocused, validateAndClamp]);\n  const focusInput = useCallback(() => {\n    if (focusInputOnChange) {\n      requestAnimationFrame(() => {\n        var _a;\n        (_a = inputRef.current) == null ? void 0 : _a.focus();\n      });\n    }\n  }, [focusInputOnChange]);\n  const spinUp = useCallback(event => {\n    event.preventDefault();\n    spinner.up();\n    focusInput();\n  }, [focusInput, spinner]);\n  const spinDown = useCallback(event => {\n    event.preventDefault();\n    spinner.down();\n    focusInput();\n  }, [focusInput, spinner]);\n  useEventListener(() => inputRef.current, \"wheel\", event => {\n    var _a, _b;\n    const doc = (_b = (_a = inputRef.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n    const isInputFocused = doc.activeElement === inputRef.current;\n    if (!allowMouseWheel || !isInputFocused) return;\n    event.preventDefault();\n    const stepFactor = getStepFactor(event) * stepProp;\n    const direction = Math.sign(event.deltaY);\n    if (direction === -1) {\n      increment(stepFactor);\n    } else if (direction === 1) {\n      decrement(stepFactor);\n    }\n  }, {\n    passive: false\n  });\n  const getIncrementButtonProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const disabled = isDisabled || keepWithinRange && counter.isAtMax;\n    return {\n      ...props2,\n      ref: mergeRefs(ref, incrementButtonRef),\n      role: \"button\",\n      tabIndex: -1,\n      onPointerDown: callAllHandlers(props2.onPointerDown, event => {\n        if (event.button !== 0 || disabled) return;\n        spinUp(event);\n      }),\n      onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n      onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n      disabled,\n      \"aria-disabled\": ariaAttr(disabled)\n    };\n  }, [counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]);\n  const getDecrementButtonProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const disabled = isDisabled || keepWithinRange && counter.isAtMin;\n    return {\n      ...props2,\n      ref: mergeRefs(ref, decrementButtonRef),\n      role: \"button\",\n      tabIndex: -1,\n      onPointerDown: callAllHandlers(props2.onPointerDown, event => {\n        if (event.button !== 0 || disabled) return;\n        spinDown(event);\n      }),\n      onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n      onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n      disabled,\n      \"aria-disabled\": ariaAttr(disabled)\n    };\n  }, [counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]);\n  const getInputProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var _a, _b, _c, _d;\n    return {\n      name,\n      inputMode,\n      type: \"text\",\n      pattern,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-label\": ariaLabel,\n      \"aria-describedby\": ariaDescBy,\n      id,\n      disabled: isDisabled,\n      ...props2,\n      readOnly: (_a = props2.readOnly) != null ? _a : isReadOnly,\n      \"aria-readonly\": (_b = props2.readOnly) != null ? _b : isReadOnly,\n      \"aria-required\": (_c = props2.required) != null ? _c : isRequired,\n      required: (_d = props2.required) != null ? _d : isRequired,\n      ref: mergeRefs(inputRef, ref),\n      value: format(counter.value),\n      role: \"spinbutton\",\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": Number.isNaN(counter.valueAsNumber) ? void 0 : counter.valueAsNumber,\n      \"aria-invalid\": ariaAttr(isInvalid != null ? isInvalid : counter.isOutOfRange),\n      \"aria-valuetext\": ariaValueText,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      onChange: callAllHandlers(props2.onChange, onChange),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, _onFocus, () => setFocused(true)),\n      onBlur: callAllHandlers(props2.onBlur, onBlur, onInputBlur)\n    };\n  }, [name, inputMode, pattern, ariaLabelledBy, ariaLabel, format, ariaDescBy, id, isDisabled, isRequired, isReadOnly, isInvalid, counter.value, counter.valueAsNumber, counter.isOutOfRange, min, max, ariaValueText, onChange, onKeyDown, _onFocus, onBlur, onInputBlur]);\n  return {\n    value: format(counter.value),\n    valueAsNumber: counter.valueAsNumber,\n    isFocused,\n    isDisabled,\n    isReadOnly,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getInputProps,\n    htmlProps\n  };\n}\nexport { useNumberInput };","map":{"version":3,"names":["useAttributeObserver","useSpinner","useCounter","useEventListener","useUpdateEffect","useSafeLayoutEffect","useCallbackRef","mergeRefs","ariaAttr","callAllHandlers","useCallback","useMemo","useRef","useState","FLOATING_POINT_REGEX","isFloatingPointNumericCharacter","character","test","isValidNumericKeyboardEvent","event","isValid","key","isModifierKey","ctrlKey","altKey","metaKey","isSingleCharacterKey","length","useNumberInput","props","arguments","undefined","focusInputOnChange","clampValueOnBlur","keepWithinRange","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","step","stepProp","isReadOnly","isDisabled","isRequired","isInvalid","pattern","inputMode","allowMouseWheel","id","onChange","_","precision","name","ariaDescBy","ariaLabel","ariaLabelledBy","onFocus","onFocusProp","onBlur","onBlurProp","onInvalid","onInvalidProp","getAriaValueText","getAriaValueTextProp","isValidCharacter","isValidCharacterProp","format","formatValue","parse","parseValue","htmlProps","counter","update","updateFn","increment","incrementFn","decrement","decrementFn","isFocused","setFocused","isInteractive","inputRef","inputSelectionRef","incrementButtonRef","decrementButtonRef","sanitize","value","split","filter","join","_a","toString","valueAsNumber","current","notInSync","parsedInput","setValue","spinner","stop","isSpinning","evt","nativeEvent","isComposing","currentTarget","start","selectionStart","end","selectionEnd","_onFocus","_b","_c","target","onKeyDown","preventDefault","stepFactor","getStepFactor","eventKey","keyMap","ArrowUp","ArrowDown","Home","End","action","ratio","shiftKey","ariaValueText","text","defaultText","validateAndClamp","next","valueStartsWithE","cast","onInputBlur","focusInput","requestAnimationFrame","focus","spinUp","up","spinDown","down","doc","ownerDocument","document","isInputFocused","activeElement","direction","Math","sign","deltaY","passive","getIncrementButtonProps","props2","ref","disabled","isAtMax","role","tabIndex","onPointerDown","button","onPointerLeave","onPointerUp","getDecrementButtonProps","isAtMin","getInputProps","_d","type","readOnly","required","isNaN","isOutOfRange","autoComplete","autoCorrect"],"sources":["/Users/harshkulkarni/Desktop/cloud_project/node_modules/@chakra-ui/number-input/dist/chunk-RBDW77H4.mjs"],"sourcesContent":["import {\n  useAttributeObserver\n} from \"./chunk-XRH675A5.mjs\";\nimport {\n  useSpinner\n} from \"./chunk-JCNYS6PS.mjs\";\n\n// src/use-number-input.ts\nimport { useCounter } from \"@chakra-ui/counter\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useMemo, useRef, useState } from \"react\";\nvar FLOATING_POINT_REGEX = /^[Ee0-9+\\-.]$/;\nfunction isFloatingPointNumericCharacter(character) {\n  return FLOATING_POINT_REGEX.test(character);\n}\nfunction isValidNumericKeyboardEvent(event, isValid) {\n  if (event.key == null)\n    return true;\n  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n  const isSingleCharacterKey = event.key.length === 1;\n  if (!isSingleCharacterKey || isModifierKey)\n    return true;\n  return isValid(event.key);\n}\nfunction useNumberInput(props = {}) {\n  const {\n    focusInputOnChange = true,\n    clampValueOnBlur = true,\n    keepWithinRange = true,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    step: stepProp = 1,\n    isReadOnly,\n    isDisabled,\n    isRequired,\n    isInvalid,\n    pattern = \"[0-9]*(.[0-9]+)?\",\n    inputMode = \"decimal\",\n    allowMouseWheel,\n    id,\n    onChange: _,\n    precision,\n    name,\n    \"aria-describedby\": ariaDescBy,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    onFocus: onFocusProp,\n    onBlur: onBlurProp,\n    onInvalid: onInvalidProp,\n    getAriaValueText: getAriaValueTextProp,\n    isValidCharacter: isValidCharacterProp,\n    format: formatValue,\n    parse: parseValue,\n    ...htmlProps\n  } = props;\n  const onFocus = useCallbackRef(onFocusProp);\n  const onBlur = useCallbackRef(onBlurProp);\n  const onInvalid = useCallbackRef(onInvalidProp);\n  const isValidCharacter = useCallbackRef(\n    isValidCharacterProp != null ? isValidCharacterProp : isFloatingPointNumericCharacter\n  );\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const counter = useCounter(props);\n  const {\n    update: updateFn,\n    increment: incrementFn,\n    decrement: decrementFn\n  } = counter;\n  const [isFocused, setFocused] = useState(false);\n  const isInteractive = !(isReadOnly || isDisabled);\n  const inputRef = useRef(null);\n  const inputSelectionRef = useRef(null);\n  const incrementButtonRef = useRef(null);\n  const decrementButtonRef = useRef(null);\n  const sanitize = useCallback(\n    (value) => value.split(\"\").filter(isValidCharacter).join(\"\"),\n    [isValidCharacter]\n  );\n  const parse = useCallback(\n    (value) => {\n      var _a;\n      return (_a = parseValue == null ? void 0 : parseValue(value)) != null ? _a : value;\n    },\n    [parseValue]\n  );\n  const format = useCallback(\n    (value) => {\n      var _a;\n      return ((_a = formatValue == null ? void 0 : formatValue(value)) != null ? _a : value).toString();\n    },\n    [formatValue]\n  );\n  useUpdateEffect(() => {\n    if (counter.valueAsNumber > max) {\n      onInvalid == null ? void 0 : onInvalid(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    } else if (counter.valueAsNumber < min) {\n      onInvalid == null ? void 0 : onInvalid(\"rangeOverflow\", format(counter.value), counter.valueAsNumber);\n    }\n  }, [counter.valueAsNumber, counter.value, format, onInvalid]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current)\n      return;\n    const notInSync = inputRef.current.value != counter.value;\n    if (notInSync) {\n      const parsedInput = parse(inputRef.current.value);\n      counter.setValue(sanitize(parsedInput));\n    }\n  }, [parse, sanitize]);\n  const increment = useCallback(\n    (step = stepProp) => {\n      if (isInteractive) {\n        incrementFn(step);\n      }\n    },\n    [incrementFn, isInteractive, stepProp]\n  );\n  const decrement = useCallback(\n    (step = stepProp) => {\n      if (isInteractive) {\n        decrementFn(step);\n      }\n    },\n    [decrementFn, isInteractive, stepProp]\n  );\n  const spinner = useSpinner(increment, decrement);\n  useAttributeObserver(\n    incrementButtonRef,\n    \"disabled\",\n    spinner.stop,\n    spinner.isSpinning\n  );\n  useAttributeObserver(\n    decrementButtonRef,\n    \"disabled\",\n    spinner.stop,\n    spinner.isSpinning\n  );\n  const onChange = useCallback(\n    (event) => {\n      const evt = event.nativeEvent;\n      if (evt.isComposing)\n        return;\n      const parsedInput = parse(event.currentTarget.value);\n      updateFn(sanitize(parsedInput));\n      inputSelectionRef.current = {\n        start: event.currentTarget.selectionStart,\n        end: event.currentTarget.selectionEnd\n      };\n    },\n    [updateFn, sanitize, parse]\n  );\n  const _onFocus = useCallback(\n    (event) => {\n      var _a, _b, _c;\n      onFocus == null ? void 0 : onFocus(event);\n      if (!inputSelectionRef.current)\n        return;\n      event.target.selectionStart = (_b = inputSelectionRef.current.start) != null ? _b : (_a = event.currentTarget.value) == null ? void 0 : _a.length;\n      event.currentTarget.selectionEnd = (_c = inputSelectionRef.current.end) != null ? _c : event.currentTarget.selectionStart;\n    },\n    [onFocus]\n  );\n  const onKeyDown = useCallback(\n    (event) => {\n      if (event.nativeEvent.isComposing)\n        return;\n      if (!isValidNumericKeyboardEvent(event, isValidCharacter)) {\n        event.preventDefault();\n      }\n      const stepFactor = getStepFactor(event) * stepProp;\n      const eventKey = event.key;\n      const keyMap = {\n        ArrowUp: () => increment(stepFactor),\n        ArrowDown: () => decrement(stepFactor),\n        Home: () => updateFn(min),\n        End: () => updateFn(max)\n      };\n      const action = keyMap[eventKey];\n      if (action) {\n        event.preventDefault();\n        action(event);\n      }\n    },\n    [isValidCharacter, stepProp, increment, decrement, updateFn, min, max]\n  );\n  const getStepFactor = (event) => {\n    let ratio = 1;\n    if (event.metaKey || event.ctrlKey) {\n      ratio = 0.1;\n    }\n    if (event.shiftKey) {\n      ratio = 10;\n    }\n    return ratio;\n  };\n  const ariaValueText = useMemo(() => {\n    const text = getAriaValueText == null ? void 0 : getAriaValueText(counter.value);\n    if (text != null)\n      return text;\n    const defaultText = counter.value.toString();\n    return !defaultText ? void 0 : defaultText;\n  }, [counter.value, getAriaValueText]);\n  const validateAndClamp = useCallback(() => {\n    let next = counter.value;\n    if (counter.value === \"\")\n      return;\n    const valueStartsWithE = /^[eE]/.test(counter.value.toString());\n    if (valueStartsWithE) {\n      counter.setValue(\"\");\n    } else {\n      if (counter.valueAsNumber < min) {\n        next = min;\n      }\n      if (counter.valueAsNumber > max) {\n        next = max;\n      }\n      counter.cast(next);\n    }\n  }, [counter, max, min]);\n  const onInputBlur = useCallback(() => {\n    setFocused(false);\n    if (clampValueOnBlur) {\n      validateAndClamp();\n    }\n  }, [clampValueOnBlur, setFocused, validateAndClamp]);\n  const focusInput = useCallback(() => {\n    if (focusInputOnChange) {\n      requestAnimationFrame(() => {\n        var _a;\n        (_a = inputRef.current) == null ? void 0 : _a.focus();\n      });\n    }\n  }, [focusInputOnChange]);\n  const spinUp = useCallback(\n    (event) => {\n      event.preventDefault();\n      spinner.up();\n      focusInput();\n    },\n    [focusInput, spinner]\n  );\n  const spinDown = useCallback(\n    (event) => {\n      event.preventDefault();\n      spinner.down();\n      focusInput();\n    },\n    [focusInput, spinner]\n  );\n  useEventListener(\n    () => inputRef.current,\n    \"wheel\",\n    (event) => {\n      var _a, _b;\n      const doc = (_b = (_a = inputRef.current) == null ? void 0 : _a.ownerDocument) != null ? _b : document;\n      const isInputFocused = doc.activeElement === inputRef.current;\n      if (!allowMouseWheel || !isInputFocused)\n        return;\n      event.preventDefault();\n      const stepFactor = getStepFactor(event) * stepProp;\n      const direction = Math.sign(event.deltaY);\n      if (direction === -1) {\n        increment(stepFactor);\n      } else if (direction === 1) {\n        decrement(stepFactor);\n      }\n    },\n    { passive: false }\n  );\n  const getIncrementButtonProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const disabled = isDisabled || keepWithinRange && counter.isAtMax;\n      return {\n        ...props2,\n        ref: mergeRefs(ref, incrementButtonRef),\n        role: \"button\",\n        tabIndex: -1,\n        onPointerDown: callAllHandlers(props2.onPointerDown, (event) => {\n          if (event.button !== 0 || disabled)\n            return;\n          spinUp(event);\n        }),\n        onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n        onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n        disabled,\n        \"aria-disabled\": ariaAttr(disabled)\n      };\n    },\n    [counter.isAtMax, keepWithinRange, spinUp, spinner.stop, isDisabled]\n  );\n  const getDecrementButtonProps = useCallback(\n    (props2 = {}, ref = null) => {\n      const disabled = isDisabled || keepWithinRange && counter.isAtMin;\n      return {\n        ...props2,\n        ref: mergeRefs(ref, decrementButtonRef),\n        role: \"button\",\n        tabIndex: -1,\n        onPointerDown: callAllHandlers(props2.onPointerDown, (event) => {\n          if (event.button !== 0 || disabled)\n            return;\n          spinDown(event);\n        }),\n        onPointerLeave: callAllHandlers(props2.onPointerLeave, spinner.stop),\n        onPointerUp: callAllHandlers(props2.onPointerUp, spinner.stop),\n        disabled,\n        \"aria-disabled\": ariaAttr(disabled)\n      };\n    },\n    [counter.isAtMin, keepWithinRange, spinDown, spinner.stop, isDisabled]\n  );\n  const getInputProps = useCallback(\n    (props2 = {}, ref = null) => {\n      var _a, _b, _c, _d;\n      return {\n        name,\n        inputMode,\n        type: \"text\",\n        pattern,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-label\": ariaLabel,\n        \"aria-describedby\": ariaDescBy,\n        id,\n        disabled: isDisabled,\n        ...props2,\n        readOnly: (_a = props2.readOnly) != null ? _a : isReadOnly,\n        \"aria-readonly\": (_b = props2.readOnly) != null ? _b : isReadOnly,\n        \"aria-required\": (_c = props2.required) != null ? _c : isRequired,\n        required: (_d = props2.required) != null ? _d : isRequired,\n        ref: mergeRefs(inputRef, ref),\n        value: format(counter.value),\n        role: \"spinbutton\",\n        \"aria-valuemin\": min,\n        \"aria-valuemax\": max,\n        \"aria-valuenow\": Number.isNaN(counter.valueAsNumber) ? void 0 : counter.valueAsNumber,\n        \"aria-invalid\": ariaAttr(isInvalid != null ? isInvalid : counter.isOutOfRange),\n        \"aria-valuetext\": ariaValueText,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        onChange: callAllHandlers(props2.onChange, onChange),\n        onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(\n          props2.onFocus,\n          _onFocus,\n          () => setFocused(true)\n        ),\n        onBlur: callAllHandlers(props2.onBlur, onBlur, onInputBlur)\n      };\n    },\n    [\n      name,\n      inputMode,\n      pattern,\n      ariaLabelledBy,\n      ariaLabel,\n      format,\n      ariaDescBy,\n      id,\n      isDisabled,\n      isRequired,\n      isReadOnly,\n      isInvalid,\n      counter.value,\n      counter.valueAsNumber,\n      counter.isOutOfRange,\n      min,\n      max,\n      ariaValueText,\n      onChange,\n      onKeyDown,\n      _onFocus,\n      onBlur,\n      onInputBlur\n    ]\n  );\n  return {\n    value: format(counter.value),\n    valueAsNumber: counter.valueAsNumber,\n    isFocused,\n    isDisabled,\n    isReadOnly,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getInputProps,\n    htmlProps\n  };\n}\n\nexport {\n  useNumberInput\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}