{"ast":null,"code":"// src/breakpoint.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nfunction getLastItem(array) {\n  const length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : void 0;\n}\nfunction analyzeCSSValue(value) {\n  const num = parseFloat(value.toString());\n  const unit = value.toString().replace(String(num), \"\");\n  return {\n    unitless: !unit,\n    value: num,\n    unit\n  };\n}\nfunction px(value) {\n  if (value == null) return value;\n  const {\n    unitless\n  } = analyzeCSSValue(value);\n  return unitless || typeof value === \"number\" ? `${value}px` : value;\n}\nvar sortByBreakpointValue = (a, b) => parseInt(a[1], 10) > parseInt(b[1], 10) ? 1 : -1;\nvar sortBps = breakpoints => Object.fromEntries(Object.entries(breakpoints).sort(sortByBreakpointValue));\nfunction normalize(breakpoints) {\n  const sorted = sortBps(breakpoints);\n  return Object.assign(Object.values(sorted), sorted);\n}\nfunction keys(breakpoints) {\n  const value = Object.keys(sortBps(breakpoints));\n  return new Set(value);\n}\nfunction subtract(value) {\n  var _a;\n  if (!value) return value;\n  value = (_a = px(value)) != null ? _a : value;\n  const OFFSET = -0.02;\n  return typeof value === \"number\" ? `${value + OFFSET}` : value.replace(/(\\d+\\.?\\d*)/u, m => `${parseFloat(m) + OFFSET}`);\n}\nfunction toMediaQueryString(min, max) {\n  const query = [\"@media screen\"];\n  if (min) query.push(\"and\", `(min-width: ${px(min)})`);\n  if (max) query.push(\"and\", `(max-width: ${px(max)})`);\n  return query.join(\" \");\n}\nfunction analyzeBreakpoints(breakpoints) {\n  var _a;\n  if (!breakpoints) return null;\n  breakpoints.base = (_a = breakpoints.base) != null ? _a : \"0px\";\n  const normalized = normalize(breakpoints);\n  const queries = Object.entries(breakpoints).sort(sortByBreakpointValue).map((_ref, index, entry) => {\n    let [breakpoint, minW] = _ref;\n    var _a2;\n    let [, maxW] = (_a2 = entry[index + 1]) != null ? _a2 : [];\n    maxW = parseFloat(maxW) > 0 ? subtract(maxW) : void 0;\n    return {\n      _minW: subtract(minW),\n      breakpoint,\n      minW,\n      maxW,\n      maxWQuery: toMediaQueryString(null, maxW),\n      minWQuery: toMediaQueryString(minW),\n      minMaxQuery: toMediaQueryString(minW, maxW)\n    };\n  });\n  const _keys = keys(breakpoints);\n  const _keysArr = Array.from(_keys.values());\n  return {\n    keys: _keys,\n    normalized,\n    isResponsive(test) {\n      const keys2 = Object.keys(test);\n      return keys2.length > 0 && keys2.every(key => _keys.has(key));\n    },\n    asObject: sortBps(breakpoints),\n    asArray: normalize(breakpoints),\n    details: queries,\n    get(key) {\n      return queries.find(q => q.breakpoint === key);\n    },\n    media: [null, ...normalized.map(minW => toMediaQueryString(minW)).slice(1)],\n    toArrayValue(test) {\n      if (!isObject(test)) {\n        throw new Error(\"toArrayValue: value must be an object\");\n      }\n      const result = _keysArr.map(bp => {\n        var _a2;\n        return (_a2 = test[bp]) != null ? _a2 : null;\n      });\n      while (getLastItem(result) === null) {\n        result.pop();\n      }\n      return result;\n    },\n    toObjectValue(test) {\n      if (!Array.isArray(test)) {\n        throw new Error(\"toObjectValue: value must be an array\");\n      }\n      return test.reduce((acc, value, index) => {\n        const key = _keysArr[index];\n        if (key != null && value != null) acc[key] = value;\n        return acc;\n      }, {});\n    }\n  };\n}\nexport { px, toMediaQueryString, analyzeBreakpoints };","map":{"version":3,"names":["isObject","getLastItem","array","length","analyzeCSSValue","value","num","parseFloat","toString","unit","replace","String","unitless","px","sortByBreakpointValue","a","b","parseInt","sortBps","breakpoints","Object","fromEntries","entries","sort","normalize","sorted","assign","values","keys","Set","subtract","_a","OFFSET","m","toMediaQueryString","min","max","query","push","join","analyzeBreakpoints","base","normalized","queries","map","_ref","index","entry","breakpoint","minW","_a2","maxW","_minW","maxWQuery","minWQuery","minMaxQuery","_keys","_keysArr","Array","from","isResponsive","test","keys2","every","key","has","asObject","asArray","details","get","find","q","media","slice","toArrayValue","Error","result","bp","pop","toObjectValue","isArray","reduce","acc"],"sources":["/Users/harshkulkarni/Desktop/cloud_project/node_modules/@chakra-ui/breakpoint-utils/dist/chunk-FWBNTPAC.mjs"],"sourcesContent":["// src/breakpoint.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nfunction getLastItem(array) {\n  const length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : void 0;\n}\nfunction analyzeCSSValue(value) {\n  const num = parseFloat(value.toString());\n  const unit = value.toString().replace(String(num), \"\");\n  return { unitless: !unit, value: num, unit };\n}\nfunction px(value) {\n  if (value == null)\n    return value;\n  const { unitless } = analyzeCSSValue(value);\n  return unitless || typeof value === \"number\" ? `${value}px` : value;\n}\nvar sortByBreakpointValue = (a, b) => parseInt(a[1], 10) > parseInt(b[1], 10) ? 1 : -1;\nvar sortBps = (breakpoints) => Object.fromEntries(Object.entries(breakpoints).sort(sortByBreakpointValue));\nfunction normalize(breakpoints) {\n  const sorted = sortBps(breakpoints);\n  return Object.assign(Object.values(sorted), sorted);\n}\nfunction keys(breakpoints) {\n  const value = Object.keys(sortBps(breakpoints));\n  return new Set(value);\n}\nfunction subtract(value) {\n  var _a;\n  if (!value)\n    return value;\n  value = (_a = px(value)) != null ? _a : value;\n  const OFFSET = -0.02;\n  return typeof value === \"number\" ? `${value + OFFSET}` : value.replace(/(\\d+\\.?\\d*)/u, (m) => `${parseFloat(m) + OFFSET}`);\n}\nfunction toMediaQueryString(min, max) {\n  const query = [\"@media screen\"];\n  if (min)\n    query.push(\"and\", `(min-width: ${px(min)})`);\n  if (max)\n    query.push(\"and\", `(max-width: ${px(max)})`);\n  return query.join(\" \");\n}\nfunction analyzeBreakpoints(breakpoints) {\n  var _a;\n  if (!breakpoints)\n    return null;\n  breakpoints.base = (_a = breakpoints.base) != null ? _a : \"0px\";\n  const normalized = normalize(breakpoints);\n  const queries = Object.entries(breakpoints).sort(sortByBreakpointValue).map(([breakpoint, minW], index, entry) => {\n    var _a2;\n    let [, maxW] = (_a2 = entry[index + 1]) != null ? _a2 : [];\n    maxW = parseFloat(maxW) > 0 ? subtract(maxW) : void 0;\n    return {\n      _minW: subtract(minW),\n      breakpoint,\n      minW,\n      maxW,\n      maxWQuery: toMediaQueryString(null, maxW),\n      minWQuery: toMediaQueryString(minW),\n      minMaxQuery: toMediaQueryString(minW, maxW)\n    };\n  });\n  const _keys = keys(breakpoints);\n  const _keysArr = Array.from(_keys.values());\n  return {\n    keys: _keys,\n    normalized,\n    isResponsive(test) {\n      const keys2 = Object.keys(test);\n      return keys2.length > 0 && keys2.every((key) => _keys.has(key));\n    },\n    asObject: sortBps(breakpoints),\n    asArray: normalize(breakpoints),\n    details: queries,\n    get(key) {\n      return queries.find((q) => q.breakpoint === key);\n    },\n    media: [\n      null,\n      ...normalized.map((minW) => toMediaQueryString(minW)).slice(1)\n    ],\n    toArrayValue(test) {\n      if (!isObject(test)) {\n        throw new Error(\"toArrayValue: value must be an object\");\n      }\n      const result = _keysArr.map((bp) => {\n        var _a2;\n        return (_a2 = test[bp]) != null ? _a2 : null;\n      });\n      while (getLastItem(result) === null) {\n        result.pop();\n      }\n      return result;\n    },\n    toObjectValue(test) {\n      if (!Array.isArray(test)) {\n        throw new Error(\"toObjectValue: value must be an array\");\n      }\n      return test.reduce((acc, value, index) => {\n        const key = _keysArr[index];\n        if (key != null && value != null)\n          acc[key] = value;\n        return acc;\n      }, {});\n    }\n  };\n}\n\nexport {\n  px,\n  toMediaQueryString,\n  analyzeBreakpoints\n};\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,MAAMC,MAAM,GAAGD,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGA,KAAK,CAACC,MAAM;EAC/C,OAAOA,MAAM,GAAGD,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;AAC5C;AACA,SAASC,eAAeA,CAACC,KAAK,EAAE;EAC9B,MAAMC,GAAG,GAAGC,UAAU,CAACF,KAAK,CAACG,QAAQ,EAAE,CAAC;EACxC,MAAMC,IAAI,GAAGJ,KAAK,CAACG,QAAQ,EAAE,CAACE,OAAO,CAACC,MAAM,CAACL,GAAG,CAAC,EAAE,EAAE,CAAC;EACtD,OAAO;IAAEM,QAAQ,EAAE,CAACH,IAAI;IAAEJ,KAAK,EAAEC,GAAG;IAAEG;EAAK,CAAC;AAC9C;AACA,SAASI,EAAEA,CAACR,KAAK,EAAE;EACjB,IAAIA,KAAK,IAAI,IAAI,EACf,OAAOA,KAAK;EACd,MAAM;IAAEO;EAAS,CAAC,GAAGR,eAAe,CAACC,KAAK,CAAC;EAC3C,OAAOO,QAAQ,IAAI,OAAOP,KAAK,KAAK,QAAQ,GAAI,GAAEA,KAAM,IAAG,GAAGA,KAAK;AACrE;AACA,IAAIS,qBAAqB,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAKC,QAAQ,CAACF,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAGE,QAAQ,CAACD,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtF,IAAIE,OAAO,GAAIC,WAAW,IAAKC,MAAM,CAACC,WAAW,CAACD,MAAM,CAACE,OAAO,CAACH,WAAW,CAAC,CAACI,IAAI,CAACT,qBAAqB,CAAC,CAAC;AAC1G,SAASU,SAASA,CAACL,WAAW,EAAE;EAC9B,MAAMM,MAAM,GAAGP,OAAO,CAACC,WAAW,CAAC;EACnC,OAAOC,MAAM,CAACM,MAAM,CAACN,MAAM,CAACO,MAAM,CAACF,MAAM,CAAC,EAAEA,MAAM,CAAC;AACrD;AACA,SAASG,IAAIA,CAACT,WAAW,EAAE;EACzB,MAAMd,KAAK,GAAGe,MAAM,CAACQ,IAAI,CAACV,OAAO,CAACC,WAAW,CAAC,CAAC;EAC/C,OAAO,IAAIU,GAAG,CAACxB,KAAK,CAAC;AACvB;AACA,SAASyB,QAAQA,CAACzB,KAAK,EAAE;EACvB,IAAI0B,EAAE;EACN,IAAI,CAAC1B,KAAK,EACR,OAAOA,KAAK;EACdA,KAAK,GAAG,CAAC0B,EAAE,GAAGlB,EAAE,CAACR,KAAK,CAAC,KAAK,IAAI,GAAG0B,EAAE,GAAG1B,KAAK;EAC7C,MAAM2B,MAAM,GAAG,CAAC,IAAI;EACpB,OAAO,OAAO3B,KAAK,KAAK,QAAQ,GAAI,GAAEA,KAAK,GAAG2B,MAAO,EAAC,GAAG3B,KAAK,CAACK,OAAO,CAAC,cAAc,EAAGuB,CAAC,IAAM,GAAE1B,UAAU,CAAC0B,CAAC,CAAC,GAAGD,MAAO,EAAC,CAAC;AAC5H;AACA,SAASE,kBAAkBA,CAACC,GAAG,EAAEC,GAAG,EAAE;EACpC,MAAMC,KAAK,GAAG,CAAC,eAAe,CAAC;EAC/B,IAAIF,GAAG,EACLE,KAAK,CAACC,IAAI,CAAC,KAAK,EAAG,eAAczB,EAAE,CAACsB,GAAG,CAAE,GAAE,CAAC;EAC9C,IAAIC,GAAG,EACLC,KAAK,CAACC,IAAI,CAAC,KAAK,EAAG,eAAczB,EAAE,CAACuB,GAAG,CAAE,GAAE,CAAC;EAC9C,OAAOC,KAAK,CAACE,IAAI,CAAC,GAAG,CAAC;AACxB;AACA,SAASC,kBAAkBA,CAACrB,WAAW,EAAE;EACvC,IAAIY,EAAE;EACN,IAAI,CAACZ,WAAW,EACd,OAAO,IAAI;EACbA,WAAW,CAACsB,IAAI,GAAG,CAACV,EAAE,GAAGZ,WAAW,CAACsB,IAAI,KAAK,IAAI,GAAGV,EAAE,GAAG,KAAK;EAC/D,MAAMW,UAAU,GAAGlB,SAAS,CAACL,WAAW,CAAC;EACzC,MAAMwB,OAAO,GAAGvB,MAAM,CAACE,OAAO,CAACH,WAAW,CAAC,CAACI,IAAI,CAACT,qBAAqB,CAAC,CAAC8B,GAAG,CAAC,CAAAC,IAAA,EAAqBC,KAAK,EAAEC,KAAK,KAAK;IAAA,IAArC,CAACC,UAAU,EAAEC,IAAI,CAAC,GAAAJ,IAAA;IAC7F,IAAIK,GAAG;IACP,IAAI,GAAGC,IAAI,CAAC,GAAG,CAACD,GAAG,GAAGH,KAAK,CAACD,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,GAAGI,GAAG,GAAG,EAAE;IAC1DC,IAAI,GAAG5C,UAAU,CAAC4C,IAAI,CAAC,GAAG,CAAC,GAAGrB,QAAQ,CAACqB,IAAI,CAAC,GAAG,KAAK,CAAC;IACrD,OAAO;MACLC,KAAK,EAAEtB,QAAQ,CAACmB,IAAI,CAAC;MACrBD,UAAU;MACVC,IAAI;MACJE,IAAI;MACJE,SAAS,EAAEnB,kBAAkB,CAAC,IAAI,EAAEiB,IAAI,CAAC;MACzCG,SAAS,EAAEpB,kBAAkB,CAACe,IAAI,CAAC;MACnCM,WAAW,EAAErB,kBAAkB,CAACe,IAAI,EAAEE,IAAI;IAC5C,CAAC;EACH,CAAC,CAAC;EACF,MAAMK,KAAK,GAAG5B,IAAI,CAACT,WAAW,CAAC;EAC/B,MAAMsC,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC7B,MAAM,EAAE,CAAC;EAC3C,OAAO;IACLC,IAAI,EAAE4B,KAAK;IACXd,UAAU;IACVkB,YAAYA,CAACC,IAAI,EAAE;MACjB,MAAMC,KAAK,GAAG1C,MAAM,CAACQ,IAAI,CAACiC,IAAI,CAAC;MAC/B,OAAOC,KAAK,CAAC3D,MAAM,GAAG,CAAC,IAAI2D,KAAK,CAACC,KAAK,CAAEC,GAAG,IAAKR,KAAK,CAACS,GAAG,CAACD,GAAG,CAAC,CAAC;IACjE,CAAC;IACDE,QAAQ,EAAEhD,OAAO,CAACC,WAAW,CAAC;IAC9BgD,OAAO,EAAE3C,SAAS,CAACL,WAAW,CAAC;IAC/BiD,OAAO,EAAEzB,OAAO;IAChB0B,GAAGA,CAACL,GAAG,EAAE;MACP,OAAOrB,OAAO,CAAC2B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACvB,UAAU,KAAKgB,GAAG,CAAC;IAClD,CAAC;IACDQ,KAAK,EAAE,CACL,IAAI,EACJ,GAAG9B,UAAU,CAACE,GAAG,CAAEK,IAAI,IAAKf,kBAAkB,CAACe,IAAI,CAAC,CAAC,CAACwB,KAAK,CAAC,CAAC,CAAC,CAC/D;IACDC,YAAYA,CAACb,IAAI,EAAE;MACjB,IAAI,CAAC7D,QAAQ,CAAC6D,IAAI,CAAC,EAAE;QACnB,MAAM,IAAIc,KAAK,CAAC,uCAAuC,CAAC;MAC1D;MACA,MAAMC,MAAM,GAAGnB,QAAQ,CAACb,GAAG,CAAEiC,EAAE,IAAK;QAClC,IAAI3B,GAAG;QACP,OAAO,CAACA,GAAG,GAAGW,IAAI,CAACgB,EAAE,CAAC,KAAK,IAAI,GAAG3B,GAAG,GAAG,IAAI;MAC9C,CAAC,CAAC;MACF,OAAOjD,WAAW,CAAC2E,MAAM,CAAC,KAAK,IAAI,EAAE;QACnCA,MAAM,CAACE,GAAG,EAAE;MACd;MACA,OAAOF,MAAM;IACf,CAAC;IACDG,aAAaA,CAAClB,IAAI,EAAE;MAClB,IAAI,CAACH,KAAK,CAACsB,OAAO,CAACnB,IAAI,CAAC,EAAE;QACxB,MAAM,IAAIc,KAAK,CAAC,uCAAuC,CAAC;MAC1D;MACA,OAAOd,IAAI,CAACoB,MAAM,CAAC,CAACC,GAAG,EAAE7E,KAAK,EAAEyC,KAAK,KAAK;QACxC,MAAMkB,GAAG,GAAGP,QAAQ,CAACX,KAAK,CAAC;QAC3B,IAAIkB,GAAG,IAAI,IAAI,IAAI3D,KAAK,IAAI,IAAI,EAC9B6E,GAAG,CAAClB,GAAG,CAAC,GAAG3D,KAAK;QAClB,OAAO6E,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IACR;EACF,CAAC;AACH;AAEA,SACErE,EAAE,EACFqB,kBAAkB,EAClBM,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}