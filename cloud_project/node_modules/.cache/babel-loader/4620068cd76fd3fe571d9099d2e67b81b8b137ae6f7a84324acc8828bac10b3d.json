{"ast":null,"code":"// src/array.ts\nfunction getFirstItem(array) {\n  return array != null && array.length ? array[0] : void 0;\n}\nfunction getLastItem(array) {\n  const length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : void 0;\n}\nfunction getPrevItem(index, array) {\n  let loop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const prevIndex = getPrevIndex(index, array.length, loop);\n  return array[prevIndex];\n}\nfunction getNextItem(index, array) {\n  let loop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const nextIndex = getNextIndex(index, array.length, 1, loop);\n  return array[nextIndex];\n}\nfunction removeIndex(array, index) {\n  return array.filter((_, idx) => idx !== index);\n}\nfunction addItem(array, item) {\n  return [...array, item];\n}\nfunction removeItem(array, item) {\n  return array.filter(eachItem => eachItem !== item);\n}\nfunction getNextIndex(currentIndex, length) {\n  let step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let loop = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const lastIndex = length - 1;\n  if (currentIndex === -1) {\n    return step > 0 ? 0 : lastIndex;\n  }\n  const nextIndex = currentIndex + step;\n  if (nextIndex < 0) {\n    return loop ? lastIndex : 0;\n  }\n  if (nextIndex >= length) {\n    if (loop) return 0;\n    return currentIndex > length ? length : currentIndex;\n  }\n  return nextIndex;\n}\nfunction getPrevIndex(index, count) {\n  let loop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return getNextIndex(index, count, -1, loop);\n}\nfunction chunk(array, size) {\n  return array.reduce((rows, currentValue, index) => {\n    if (index % size === 0) {\n      rows.push([currentValue]);\n    } else {\n      rows[rows.length - 1].push(currentValue);\n    }\n    return rows;\n  }, []);\n}\nfunction getNextItemFromSearch(items, searchString, itemToString, currentItem) {\n  if (searchString == null) {\n    return currentItem;\n  }\n  if (!currentItem) {\n    const foundItem = items.find(item => itemToString(item).toLowerCase().startsWith(searchString.toLowerCase()));\n    return foundItem;\n  }\n  const matchingItems = items.filter(item => itemToString(item).toLowerCase().startsWith(searchString.toLowerCase()));\n  if (matchingItems.length > 0) {\n    let nextIndex;\n    if (matchingItems.includes(currentItem)) {\n      const currentIndex = matchingItems.indexOf(currentItem);\n      nextIndex = currentIndex + 1;\n      if (nextIndex === matchingItems.length) {\n        nextIndex = 0;\n      }\n      return matchingItems[nextIndex];\n    }\n    nextIndex = items.indexOf(matchingItems[0]);\n    return items[nextIndex];\n  }\n  return currentItem;\n}\nexport { getFirstItem, getLastItem, getPrevItem, getNextItem, removeIndex, addItem, removeItem, getNextIndex, getPrevIndex, chunk, getNextItemFromSearch };","map":{"version":3,"names":["getFirstItem","array","length","getLastItem","getPrevItem","index","loop","arguments","undefined","prevIndex","getPrevIndex","getNextItem","nextIndex","getNextIndex","removeIndex","filter","_","idx","addItem","item","removeItem","eachItem","currentIndex","step","lastIndex","count","chunk","size","reduce","rows","currentValue","push","getNextItemFromSearch","items","searchString","itemToString","currentItem","foundItem","find","toLowerCase","startsWith","matchingItems","includes","indexOf"],"sources":["/Users/harshkulkarni/Desktop/cloud_project/node_modules/@chakra-ui/utils/dist/chunk-YTAYUX3P.mjs"],"sourcesContent":["// src/array.ts\nfunction getFirstItem(array) {\n  return array != null && array.length ? array[0] : void 0;\n}\nfunction getLastItem(array) {\n  const length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : void 0;\n}\nfunction getPrevItem(index, array, loop = true) {\n  const prevIndex = getPrevIndex(index, array.length, loop);\n  return array[prevIndex];\n}\nfunction getNextItem(index, array, loop = true) {\n  const nextIndex = getNextIndex(index, array.length, 1, loop);\n  return array[nextIndex];\n}\nfunction removeIndex(array, index) {\n  return array.filter((_, idx) => idx !== index);\n}\nfunction addItem(array, item) {\n  return [...array, item];\n}\nfunction removeItem(array, item) {\n  return array.filter((eachItem) => eachItem !== item);\n}\nfunction getNextIndex(currentIndex, length, step = 1, loop = true) {\n  const lastIndex = length - 1;\n  if (currentIndex === -1) {\n    return step > 0 ? 0 : lastIndex;\n  }\n  const nextIndex = currentIndex + step;\n  if (nextIndex < 0) {\n    return loop ? lastIndex : 0;\n  }\n  if (nextIndex >= length) {\n    if (loop)\n      return 0;\n    return currentIndex > length ? length : currentIndex;\n  }\n  return nextIndex;\n}\nfunction getPrevIndex(index, count, loop = true) {\n  return getNextIndex(index, count, -1, loop);\n}\nfunction chunk(array, size) {\n  return array.reduce((rows, currentValue, index) => {\n    if (index % size === 0) {\n      rows.push([currentValue]);\n    } else {\n      rows[rows.length - 1].push(currentValue);\n    }\n    return rows;\n  }, []);\n}\nfunction getNextItemFromSearch(items, searchString, itemToString, currentItem) {\n  if (searchString == null) {\n    return currentItem;\n  }\n  if (!currentItem) {\n    const foundItem = items.find(\n      (item) => itemToString(item).toLowerCase().startsWith(searchString.toLowerCase())\n    );\n    return foundItem;\n  }\n  const matchingItems = items.filter(\n    (item) => itemToString(item).toLowerCase().startsWith(searchString.toLowerCase())\n  );\n  if (matchingItems.length > 0) {\n    let nextIndex;\n    if (matchingItems.includes(currentItem)) {\n      const currentIndex = matchingItems.indexOf(currentItem);\n      nextIndex = currentIndex + 1;\n      if (nextIndex === matchingItems.length) {\n        nextIndex = 0;\n      }\n      return matchingItems[nextIndex];\n    }\n    nextIndex = items.indexOf(matchingItems[0]);\n    return items[nextIndex];\n  }\n  return currentItem;\n}\n\nexport {\n  getFirstItem,\n  getLastItem,\n  getPrevItem,\n  getNextItem,\n  removeIndex,\n  addItem,\n  removeItem,\n  getNextIndex,\n  getPrevIndex,\n  chunk,\n  getNextItemFromSearch\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}