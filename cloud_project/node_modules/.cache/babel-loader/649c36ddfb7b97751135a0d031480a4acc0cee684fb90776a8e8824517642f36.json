{"ast":null,"code":"// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback(node => {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return {\n    ref: refCallback,\n    type\n  };\n}\nexport { useButtonType };","map":{"version":3,"names":["useCallback","useState","useButtonType","value","isButton","setIsButton","refCallback","node","tagName","type","ref"],"sources":["/Users/harshkulkarni/Desktop/cloud_project/node_modules/@chakra-ui/button/dist/chunk-FRFD4OXU.mjs"],"sourcesContent":["// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,CAACE,KAAK,CAAC;EAChD,MAAMG,WAAW,GAAGN,WAAW,CAAEO,IAAI,IAAK;IACxC,IAAI,CAACA,IAAI,EACP;IACFF,WAAW,CAACE,IAAI,CAACC,OAAO,KAAK,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,IAAI,GAAGL,QAAQ,GAAG,QAAQ,GAAG,KAAK,CAAC;EACzC,OAAO;IAAEM,GAAG,EAAEJ,WAAW;IAAEG;EAAK,CAAC;AACnC;AAEA,SACEP,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}