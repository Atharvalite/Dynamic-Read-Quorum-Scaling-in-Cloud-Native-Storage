{"ast":null,"code":"import { useUpdateEffect } from \"./chunk-5AOLTBA4.mjs\";\n\n// src/use-focus-effect.ts\nimport { hasFocusWithin, focus } from \"@chakra-ui/utils\";\nfunction useFocusEffect(ref, options) {\n  const {\n    shouldFocus,\n    preventScroll\n  } = options;\n  useUpdateEffect(() => {\n    const node = ref.current;\n    if (!node || !shouldFocus) return;\n    if (!hasFocusWithin(node)) {\n      focus(node, {\n        preventScroll,\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, ref, preventScroll]);\n}\nexport { useFocusEffect };","map":{"version":3,"names":["useUpdateEffect","hasFocusWithin","focus","useFocusEffect","ref","options","shouldFocus","preventScroll","node","current","nextTick"],"sources":["/Users/harshkulkarni/Desktop/cloud_project/node_modules/@chakra-ui/hooks/dist/chunk-MQIGJ23T.mjs"],"sourcesContent":["import {\n  useUpdateEffect\n} from \"./chunk-5AOLTBA4.mjs\";\n\n// src/use-focus-effect.ts\nimport { hasFocusWithin, focus } from \"@chakra-ui/utils\";\nfunction useFocusEffect(ref, options) {\n  const { shouldFocus, preventScroll } = options;\n  useUpdateEffect(() => {\n    const node = ref.current;\n    if (!node || !shouldFocus)\n      return;\n    if (!hasFocusWithin(node)) {\n      focus(node, { preventScroll, nextTick: true });\n    }\n  }, [shouldFocus, ref, preventScroll]);\n}\n\nexport {\n  useFocusEffect\n};\n"],"mappings":"AAAA,SACEA,eAAe,QACV,sBAAsB;;AAE7B;AACA,SAASC,cAAc,EAAEC,KAAK,QAAQ,kBAAkB;AACxD,SAASC,cAAcA,CAACC,GAAG,EAAEC,OAAO,EAAE;EACpC,MAAM;IAAEC,WAAW;IAAEC;EAAc,CAAC,GAAGF,OAAO;EAC9CL,eAAe,CAAC,MAAM;IACpB,MAAMQ,IAAI,GAAGJ,GAAG,CAACK,OAAO;IACxB,IAAI,CAACD,IAAI,IAAI,CAACF,WAAW,EACvB;IACF,IAAI,CAACL,cAAc,CAACO,IAAI,CAAC,EAAE;MACzBN,KAAK,CAACM,IAAI,EAAE;QAAED,aAAa;QAAEG,QAAQ,EAAE;MAAK,CAAC,CAAC;IAChD;EACF,CAAC,EAAE,CAACJ,WAAW,EAAEF,GAAG,EAAEG,aAAa,CAAC,CAAC;AACvC;AAEA,SACEJ,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}