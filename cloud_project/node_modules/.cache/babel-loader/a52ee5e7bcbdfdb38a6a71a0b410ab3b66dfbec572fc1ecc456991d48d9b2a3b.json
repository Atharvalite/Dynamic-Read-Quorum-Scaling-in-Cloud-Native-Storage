{"ast":null,"code":"import { useCheckboxGroupContext } from \"./chunk-6XFPBTDN.mjs\";\nimport { CheckboxIcon } from \"./chunk-DFEUIRKX.mjs\";\nimport { useCheckbox } from \"./chunk-H6UVDIE7.mjs\";\n\n// src/checkbox.tsx\nimport { chakra, forwardRef, keyframes, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { callAll, cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nvar rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nvar checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nvar indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nvar Checkbox = forwardRef(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = {\n    ...group,\n    ...props\n  };\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */jsx(CheckboxIcon, {}),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const iconStyles = useMemo(() => ({\n    animation: state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n    fontSize: iconSize,\n    color: iconColor,\n    ...styles.icon\n  }), [iconColor, iconSize, state.isIndeterminate, styles.icon]);\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */jsxs(chakra.label, {\n    __css: {\n      ...rootStyles,\n      ...styles.container\n    },\n    className: cx(\"chakra-checkbox\", className),\n    ...getRootProps(),\n    children: [/* @__PURE__ */jsx(\"input\", {\n      className: \"chakra-checkbox__input\",\n      ...getInputProps(inputProps, ref)\n    }), /* @__PURE__ */jsx(chakra.span, {\n      __css: {\n        ...controlStyles,\n        ...styles.control\n      },\n      className: \"chakra-checkbox__control\",\n      ...getCheckboxProps(),\n      children: clonedIcon\n    }), children && /* @__PURE__ */jsx(chakra.span, {\n      className: \"chakra-checkbox__label\",\n      ...getLabelProps(),\n      __css: {\n        marginStart: spacing,\n        ...styles.label\n      },\n      children\n    })]\n  });\n});\nCheckbox.displayName = \"Checkbox\";\nexport { Checkbox };","map":{"version":3,"names":["useCheckboxGroupContext","CheckboxIcon","useCheckbox","chakra","forwardRef","keyframes","omitThemingProps","useMultiStyleConfig","callAll","cx","cloneElement","useMemo","jsx","jsxs","controlStyles","display","alignItems","justifyContent","verticalAlign","userSelect","flexShrink","rootStyles","cursor","position","checkAnim","from","opacity","strokeDashoffset","transform","to","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","Checkbox2","props","ref","group","mergedProps","styles","ownProps","spacing","className","children","iconColor","iconSize","icon","isChecked","isCheckedProp","isDisabled","onChange","onChangeProp","inputProps","rest","value","includes","state","getInputProps","getCheckboxProps","getLabelProps","getRootProps","iconStyles","animation","isIndeterminate","fontSize","color","clonedIcon","__css","label","container","span","control","marginStart","displayName"],"sources":["/Users/harshkulkarni/Desktop/cloud_project/node_modules/@chakra-ui/checkbox/dist/chunk-RVJOM3YK.mjs"],"sourcesContent":["import {\n  useCheckboxGroupContext\n} from \"./chunk-6XFPBTDN.mjs\";\nimport {\n  CheckboxIcon\n} from \"./chunk-DFEUIRKX.mjs\";\nimport {\n  useCheckbox\n} from \"./chunk-H6UVDIE7.mjs\";\n\n// src/checkbox.tsx\nimport {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { callAll, cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nvar rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nvar checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nvar indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nvar Checkbox = forwardRef(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = { ...group, ...props };\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */ jsx(CheckboxIcon, {}),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const iconStyles = useMemo(\n    () => ({\n      animation: state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n      fontSize: iconSize,\n      color: iconColor,\n      ...styles.icon\n    }),\n    [iconColor, iconSize, state.isIndeterminate, styles.icon]\n  );\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      __css: { ...rootStyles, ...styles.container },\n      className: cx(\"chakra-checkbox\", className),\n      ...getRootProps(),\n      children: [\n        /* @__PURE__ */ jsx(\n          \"input\",\n          {\n            className: \"chakra-checkbox__input\",\n            ...getInputProps(inputProps, ref)\n          }\n        ),\n        /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            __css: { ...controlStyles, ...styles.control },\n            className: \"chakra-checkbox__control\",\n            ...getCheckboxProps(),\n            children: clonedIcon\n          }\n        ),\n        children && /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            className: \"chakra-checkbox__label\",\n            ...getLabelProps(),\n            __css: {\n              marginStart: spacing,\n              ...styles.label\n            },\n            children\n          }\n        )\n      ]\n    }\n  );\n});\nCheckbox.displayName = \"Checkbox\";\n\nexport {\n  Checkbox\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}