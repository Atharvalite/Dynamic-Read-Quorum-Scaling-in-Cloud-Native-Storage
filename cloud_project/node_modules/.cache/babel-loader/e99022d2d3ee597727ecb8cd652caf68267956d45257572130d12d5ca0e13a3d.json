{"ast":null,"code":"// src/use-media-query.ts\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { useEffect, useState } from \"react\";\nfunction useMediaQuery(query) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    ssr = true,\n    fallback\n  } = options;\n  const {\n    getWindow\n  } = useEnvironment();\n  const queries = Array.isArray(query) ? query : [query];\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter(v => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => ({\n      media: query2,\n      matches: ssr ? !!fallbackValues[index] : getWindow().matchMedia(query2).matches\n    }));\n  });\n  useEffect(() => {\n    const win = getWindow();\n    setValue(queries.map(query2 => ({\n      media: query2,\n      matches: win.matchMedia(query2).matches\n    })));\n    const mql = queries.map(query2 => win.matchMedia(query2));\n    const handler = evt => {\n      setValue(prev => {\n        return prev.slice().map(item => {\n          if (item.media === evt.media) return {\n            ...item,\n            matches: evt.matches\n          };\n          return item;\n        });\n      });\n    };\n    mql.forEach(mql2 => {\n      if (typeof mql2.addListener === \"function\") {\n        mql2.addListener(handler);\n      } else {\n        mql2.addEventListener(\"change\", handler);\n      }\n    });\n    return () => {\n      mql.forEach(mql2 => {\n        if (typeof mql2.removeListener === \"function\") {\n          mql2.removeListener(handler);\n        } else {\n          mql2.removeEventListener(\"change\", handler);\n        }\n      });\n    };\n  }, [getWindow]);\n  return value.map(item => item.matches);\n}\nexport { useMediaQuery };","map":{"version":3,"names":["useEnvironment","useEffect","useState","useMediaQuery","query","options","arguments","length","undefined","ssr","fallback","getWindow","queries","Array","isArray","fallbackValues","filter","v","value","setValue","map","query2","index","media","matches","matchMedia","win","mql","handler","evt","prev","slice","item","forEach","mql2","addListener","addEventListener","removeListener","removeEventListener"],"sources":["/Users/harshkulkarni/Desktop/cloud_project/node_modules/@chakra-ui/media-query/dist/chunk-MG6WC47T.mjs"],"sourcesContent":["// src/use-media-query.ts\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { useEffect, useState } from \"react\";\nfunction useMediaQuery(query, options = {}) {\n  const { ssr = true, fallback } = options;\n  const { getWindow } = useEnvironment();\n  const queries = Array.isArray(query) ? query : [query];\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter((v) => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => ({\n      media: query2,\n      matches: ssr ? !!fallbackValues[index] : getWindow().matchMedia(query2).matches\n    }));\n  });\n  useEffect(() => {\n    const win = getWindow();\n    setValue(\n      queries.map((query2) => ({\n        media: query2,\n        matches: win.matchMedia(query2).matches\n      }))\n    );\n    const mql = queries.map((query2) => win.matchMedia(query2));\n    const handler = (evt) => {\n      setValue((prev) => {\n        return prev.slice().map((item) => {\n          if (item.media === evt.media)\n            return { ...item, matches: evt.matches };\n          return item;\n        });\n      });\n    };\n    mql.forEach((mql2) => {\n      if (typeof mql2.addListener === \"function\") {\n        mql2.addListener(handler);\n      } else {\n        mql2.addEventListener(\"change\", handler);\n      }\n    });\n    return () => {\n      mql.forEach((mql2) => {\n        if (typeof mql2.removeListener === \"function\") {\n          mql2.removeListener(handler);\n        } else {\n          mql2.removeEventListener(\"change\", handler);\n        }\n      });\n    };\n  }, [getWindow]);\n  return value.map((item) => item.matches);\n}\n\nexport {\n  useMediaQuery\n};\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,sBAAsB;AACrD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAaA,CAACC,KAAK,EAAgB;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACxC,MAAM;IAAEG,GAAG,GAAG,IAAI;IAAEC;EAAS,CAAC,GAAGL,OAAO;EACxC,MAAM;IAAEM;EAAU,CAAC,GAAGX,cAAc,EAAE;EACtC,MAAMY,OAAO,GAAGC,KAAK,CAACC,OAAO,CAACV,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;EACtD,IAAIW,cAAc,GAAGF,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAACA,QAAQ,CAAC;EACpEK,cAAc,GAAGA,cAAc,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,IAAI,IAAI,CAAC;EACxD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,MAAM;IACvC,OAAOU,OAAO,CAACQ,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,MAAM;MACrCC,KAAK,EAAEF,MAAM;MACbG,OAAO,EAAEf,GAAG,GAAG,CAAC,CAACM,cAAc,CAACO,KAAK,CAAC,GAAGX,SAAS,EAAE,CAACc,UAAU,CAACJ,MAAM,CAAC,CAACG;IAC1E,CAAC,CAAC,CAAC;EACL,CAAC,CAAC;EACFvB,SAAS,CAAC,MAAM;IACd,MAAMyB,GAAG,GAAGf,SAAS,EAAE;IACvBQ,QAAQ,CACNP,OAAO,CAACQ,GAAG,CAAEC,MAAM,KAAM;MACvBE,KAAK,EAAEF,MAAM;MACbG,OAAO,EAAEE,GAAG,CAACD,UAAU,CAACJ,MAAM,CAAC,CAACG;IAClC,CAAC,CAAC,CAAC,CACJ;IACD,MAAMG,GAAG,GAAGf,OAAO,CAACQ,GAAG,CAAEC,MAAM,IAAKK,GAAG,CAACD,UAAU,CAACJ,MAAM,CAAC,CAAC;IAC3D,MAAMO,OAAO,GAAIC,GAAG,IAAK;MACvBV,QAAQ,CAAEW,IAAI,IAAK;QACjB,OAAOA,IAAI,CAACC,KAAK,EAAE,CAACX,GAAG,CAAEY,IAAI,IAAK;UAChC,IAAIA,IAAI,CAACT,KAAK,KAAKM,GAAG,CAACN,KAAK,EAC1B,OAAO;YAAE,GAAGS,IAAI;YAAER,OAAO,EAAEK,GAAG,CAACL;UAAQ,CAAC;UAC1C,OAAOQ,IAAI;QACb,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IACDL,GAAG,CAACM,OAAO,CAAEC,IAAI,IAAK;MACpB,IAAI,OAAOA,IAAI,CAACC,WAAW,KAAK,UAAU,EAAE;QAC1CD,IAAI,CAACC,WAAW,CAACP,OAAO,CAAC;MAC3B,CAAC,MAAM;QACLM,IAAI,CAACE,gBAAgB,CAAC,QAAQ,EAAER,OAAO,CAAC;MAC1C;IACF,CAAC,CAAC;IACF,OAAO,MAAM;MACXD,GAAG,CAACM,OAAO,CAAEC,IAAI,IAAK;QACpB,IAAI,OAAOA,IAAI,CAACG,cAAc,KAAK,UAAU,EAAE;UAC7CH,IAAI,CAACG,cAAc,CAACT,OAAO,CAAC;QAC9B,CAAC,MAAM;UACLM,IAAI,CAACI,mBAAmB,CAAC,QAAQ,EAAEV,OAAO,CAAC;QAC7C;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAACjB,SAAS,CAAC,CAAC;EACf,OAAOO,KAAK,CAACE,GAAG,CAAEY,IAAI,IAAKA,IAAI,CAACR,OAAO,CAAC;AAC1C;AAEA,SACErB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}