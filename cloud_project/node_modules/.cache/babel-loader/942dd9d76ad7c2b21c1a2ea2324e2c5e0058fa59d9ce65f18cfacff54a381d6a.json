{"ast":null,"code":"import { NativeImage } from \"./chunk-QBIO4VEB.mjs\";\nimport { shouldShowFallbackImage, useImage } from \"./chunk-HR33I6FK.mjs\";\n\n// src/image.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object) {\n  let keysToOmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/image.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"]))\n  };\n  if (showFallbackImage) {\n    if (fallback) return fallback;\n    return /* @__PURE__ */jsx(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n  return /* @__PURE__ */jsx(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage.displayName = \"Image\";\nexport { Image };","map":{"version":3,"names":["NativeImage","shouldShowFallbackImage","useImage","chakra","forwardRef","omit","object","keysToOmit","arguments","length","undefined","clone","Object","assign","key","jsx","Image","Image2","props","ref","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","rest","providedFallback","shouldIgnoreFallbackImage","status","showFallbackImage","shared","objectFit","objectPosition","img","as","className","displayName"],"sources":["/Users/harshkulkarni/Desktop/cloud_project/node_modules/@chakra-ui/image/dist/chunk-E77276RR.mjs"],"sourcesContent":["import {\n  NativeImage\n} from \"./chunk-QBIO4VEB.mjs\";\nimport {\n  shouldShowFallbackImage,\n  useImage\n} from \"./chunk-HR33I6FK.mjs\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/image.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport {\n  Image\n};\n"],"mappings":"AAAA,SACEA,WAAW,QACN,sBAAsB;AAC7B,SACEC,uBAAuB,EACvBC,QAAQ,QACH,sBAAsB;;AAE7B;AACA,SACEC,MAAM,EACNC,UAAU,QACL,mBAAmB;;AAE1B;AACA,SAASC,IAAIA,CAACC,MAAM,EAAmB;EAAA,IAAjBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACnC,MAAMG,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEP,MAAM,CAAC;EACvC,KAAK,MAAMQ,GAAG,IAAIP,UAAU,EAAE;IAC5B,IAAIO,GAAG,IAAIH,KAAK,EAAE;MAChB,OAAOA,KAAK,CAACG,GAAG,CAAC;IACnB;EACF;EACA,OAAOH,KAAK;AACd;;AAEA;AACA,SAASI,GAAG,QAAQ,mBAAmB;AACvC,IAAIC,KAAK,GAAGZ,UAAU,CAAC,SAASa,MAAMA,CAACC,KAAK,EAAEC,GAAG,EAAE;EACjD,MAAM;IACJC,WAAW;IACXC,QAAQ;IACRC,GAAG;IACHC,MAAM;IACNC,KAAK;IACLC,GAAG;IACHC,OAAO;IACPC,cAAc;IACdC,WAAW;IACXC,gBAAgB,GAAG,mBAAmB;IACtCC,cAAc;IACd,GAAGC;EACL,CAAC,GAAGb,KAAK;EACT,MAAMc,gBAAgB,GAAGZ,WAAW,KAAK,KAAK,CAAC,IAAIC,QAAQ,KAAK,KAAK,CAAC;EACtE,MAAMY,yBAAyB,GAAGP,OAAO,IAAI,IAAI,IAAIC,cAAc,IAAI,CAACK,gBAAgB;EACxF,MAAME,MAAM,GAAGhC,QAAQ,CAAC;IACtB,GAAGgB,KAAK;IACRS,cAAc,EAAEM;EAClB,CAAC,CAAC;EACF,MAAME,iBAAiB,GAAGlC,uBAAuB,CAACiC,MAAM,EAAEL,gBAAgB,CAAC;EAC3E,MAAMO,MAAM,GAAG;IACbjB,GAAG;IACHkB,SAAS,EAAEZ,GAAG;IACda,cAAc,EAAEd,KAAK;IACrB,IAAGS,yBAAyB,GAAGF,IAAI,GAAG1B,IAAI,CAAC0B,IAAI,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;EACzE,CAAC;EACD,IAAII,iBAAiB,EAAE;IACrB,IAAId,QAAQ,EACV,OAAOA,QAAQ;IACjB,OAAO,eAAgBN,GAAG,CACxBZ,MAAM,CAACoC,GAAG,EACV;MACEC,EAAE,EAAExC,WAAW;MACfyC,SAAS,EAAE,2BAA2B;MACtCnB,GAAG,EAAEF,WAAW;MAChB,GAAGgB;IACL,CAAC,CACF;EACH;EACA,OAAO,eAAgBrB,GAAG,CACxBZ,MAAM,CAACoC,GAAG,EACV;IACEC,EAAE,EAAExC,WAAW;IACfsB,GAAG;IACHC,MAAM;IACNK,WAAW;IACXF,OAAO;IACPI,cAAc;IACdW,SAAS,EAAE,cAAc;IACzB,GAAGL;EACL,CAAC,CACF;AACH,CAAC,CAAC;AACFpB,KAAK,CAAC0B,WAAW,GAAG,OAAO;AAE3B,SACE1B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}