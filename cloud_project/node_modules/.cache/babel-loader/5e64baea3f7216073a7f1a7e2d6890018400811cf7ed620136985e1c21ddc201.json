{"ast":null,"code":"import { __publicField } from \"./chunk-NHABU752.mjs\";\n\n// src/modal-manager.ts\nimport { useEffect, useState } from \"react\";\nvar ModalManager = class {\n  constructor() {\n    __publicField(this, \"modals\");\n    this.modals = /* @__PURE__ */new Map();\n  }\n  add(modal) {\n    this.modals.set(modal, this.modals.size + 1);\n    return this.modals.size;\n  }\n  remove(modal) {\n    this.modals.delete(modal);\n  }\n  isTopModal(modal) {\n    if (!modal) return false;\n    return this.modals.get(modal) === this.modals.size;\n  }\n};\nvar manager = new ModalManager();\nfunction useModalManager(ref, isOpen) {\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    const node = ref.current;\n    if (!node) return;\n    if (isOpen) {\n      const index2 = manager.add(node);\n      setIndex(index2);\n    }\n    return () => {\n      manager.remove(node);\n      setIndex(0);\n    };\n  }, [isOpen, ref]);\n  return index;\n}\nexport { manager, useModalManager };","map":{"version":3,"names":["__publicField","useEffect","useState","ModalManager","constructor","modals","Map","add","modal","set","size","remove","delete","isTopModal","get","manager","useModalManager","ref","isOpen","index","setIndex","node","current","index2"],"sources":["/Users/harshkulkarni/Desktop/cloud_project/node_modules/@chakra-ui/modal/dist/chunk-474T57YK.mjs"],"sourcesContent":["import {\n  __publicField\n} from \"./chunk-NHABU752.mjs\";\n\n// src/modal-manager.ts\nimport { useEffect, useState } from \"react\";\nvar ModalManager = class {\n  constructor() {\n    __publicField(this, \"modals\");\n    this.modals = /* @__PURE__ */ new Map();\n  }\n  add(modal) {\n    this.modals.set(modal, this.modals.size + 1);\n    return this.modals.size;\n  }\n  remove(modal) {\n    this.modals.delete(modal);\n  }\n  isTopModal(modal) {\n    if (!modal)\n      return false;\n    return this.modals.get(modal) === this.modals.size;\n  }\n};\nvar manager = new ModalManager();\nfunction useModalManager(ref, isOpen) {\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    const node = ref.current;\n    if (!node)\n      return;\n    if (isOpen) {\n      const index2 = manager.add(node);\n      setIndex(index2);\n    }\n    return () => {\n      manager.remove(node);\n      setIndex(0);\n    };\n  }, [isOpen, ref]);\n  return index;\n}\n\nexport {\n  manager,\n  useModalManager\n};\n"],"mappings":"AAAA,SACEA,aAAa,QACR,sBAAsB;;AAE7B;AACA,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,IAAIC,YAAY,GAAG,MAAM;EACvBC,WAAWA,CAAA,EAAG;IACZJ,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC;IAC7B,IAAI,CAACK,MAAM,GAAG,eAAgB,IAAIC,GAAG,EAAE;EACzC;EACAC,GAAGA,CAACC,KAAK,EAAE;IACT,IAAI,CAACH,MAAM,CAACI,GAAG,CAACD,KAAK,EAAE,IAAI,CAACH,MAAM,CAACK,IAAI,GAAG,CAAC,CAAC;IAC5C,OAAO,IAAI,CAACL,MAAM,CAACK,IAAI;EACzB;EACAC,MAAMA,CAACH,KAAK,EAAE;IACZ,IAAI,CAACH,MAAM,CAACO,MAAM,CAACJ,KAAK,CAAC;EAC3B;EACAK,UAAUA,CAACL,KAAK,EAAE;IAChB,IAAI,CAACA,KAAK,EACR,OAAO,KAAK;IACd,OAAO,IAAI,CAACH,MAAM,CAACS,GAAG,CAACN,KAAK,CAAC,KAAK,IAAI,CAACH,MAAM,CAACK,IAAI;EACpD;AACF,CAAC;AACD,IAAIK,OAAO,GAAG,IAAIZ,YAAY,EAAE;AAChC,SAASa,eAAeA,CAACC,GAAG,EAAEC,MAAM,EAAE;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrCD,SAAS,CAAC,MAAM;IACd,MAAMoB,IAAI,GAAGJ,GAAG,CAACK,OAAO;IACxB,IAAI,CAACD,IAAI,EACP;IACF,IAAIH,MAAM,EAAE;MACV,MAAMK,MAAM,GAAGR,OAAO,CAACR,GAAG,CAACc,IAAI,CAAC;MAChCD,QAAQ,CAACG,MAAM,CAAC;IAClB;IACA,OAAO,MAAM;MACXR,OAAO,CAACJ,MAAM,CAACU,IAAI,CAAC;MACpBD,QAAQ,CAAC,CAAC,CAAC;IACb,CAAC;EACH,CAAC,EAAE,CAACF,MAAM,EAAED,GAAG,CAAC,CAAC;EACjB,OAAOE,KAAK;AACd;AAEA,SACEJ,OAAO,EACPC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}